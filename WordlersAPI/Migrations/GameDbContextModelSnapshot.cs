// <auto-generated />
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WordlersAPI.Data;

#nullable disable

namespace WordlersAPI.Migrations
{
    [DbContext(typeof(GameDbContext))]
    partial class GameDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WordlersAPI.Models.Core.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("InRound")
                        .HasColumnType("boolean");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.Property<int>("RoundDuration")
                        .HasColumnType("integer");

                    b.Property<int>("TimeInBetweenRound")
                        .HasColumnType("integer");

                    b.Property<List<int>>("Users")
                        .HasColumnType("integer[]");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("WordlersAPI.Models.Core.UserGamePoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GameId")
                        .HasColumnType("integer");

                    b.Property<int>("Point")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("UserGamePoints");
                });

            modelBuilder.Entity("WordlersAPI.Models.Core.UserGamePoint", b =>
                {
                    b.HasOne("WordlersAPI.Models.Core.Game", null)
                        .WithMany("UserGamePoints")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WordlersAPI.Models.Core.Game", b =>
                {
                    b.Navigation("UserGamePoints");
                });
#pragma warning restore 612, 618
        }
    }
}
